% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export.R
\name{create_geos_v1}
\alias{create_geos_v1}
\title{Generate Geographic Regional Summaries of Fishery Data (Version 1)}
\usage{
create_geos_v1(monthly_summaries_dat = NULL, pars = NULL)
}
\arguments{
\item{monthly_summaries_dat}{A data frame containing monthly fishery metrics by district.
Required columns:
\itemize{
\item \code{district}: Character, name of the landing site district
\item \code{date}: Date, month of the summary
\item \code{mean_cpue_day}: Numeric, mean catch per unit effort per day
\item \code{mean_rpue_day}: Numeric, mean revenue per unit effort per day
\item \code{mean_price_kg}: Numeric, mean price per kilogram
}}

\item{pars}{Configuration parameters list containing:
\itemize{
\item \code{storage$google$key}: Cloud storage provider key
\item \code{storage$google$options_coasts}: Cloud storage options for coastal data
}}
}
\value{
NULL (invisible). The function uploads data to cloud storage as side effects:
\itemize{
\item Parquet file: "zanzibar_monthly_summaries_map" containing regional summaries
\item GeoJSON file: "ZAN_regions_\link{version}.geojson" containing regional boundaries
}
}
\description{
Creates geospatial representations of fishery metrics by aggregating landing
site data to regional levels along the Zanzibar coast. This simplified version
uses direct administrative district mappings instead of spatial proximity calculations,
making it more efficient for cases where district-to-region relationships are
already established.
}
\details{
The function performs the following operations:
\enumerate{
\item \strong{District-Region Mapping}: Retrieves pre-defined administrative mappings
between districts and regions from site metadata
\item \strong{Data Harmonization}: Standardizes district names (e.g., "Chake chake" to
"Chake Chake") to ensure proper joining
\item \strong{Regional Aggregation}: Calculates monthly summary statistics for each
region by aggregating district-level data
\item \strong{GeoJSON Export}: Combines regional polygon geometries with summary
statistics and exports to cloud storage
}

\strong{Key Differences from create_geos()}:
\itemize{
\item Uses administrative mappings (ADM column) instead of spatial distance calculations
\item More efficient as it avoids complex spatial operations
\item Relies on pre-established district-region relationships in metadata
\item Handles district name inconsistencies automatically
}

\strong{Calculated Regional Metrics} (using median values across districts in each region):
\itemize{
\item Mean CPUE (Catch Per Unit Effort, kg per fisher per day)
\item Mean RPUE (Revenue Per Unit Effort, TZS per fisher per day)
\item Mean Price per kg of catch
}

\strong{Output Format}:
\itemize{
\item Regional summaries are exported as Parquet files to cloud storage
\item GeoJSON file containing regional boundaries is uploaded separately
\item Both files use standardized naming conventions with version information
}
}
\note{
\strong{Dependencies}:
\itemize{
\item Requires the \code{sf} package for reading and writing spatial data
\item Requires "ZAN_coast_regions.geojson" file in the package inst/ directory
\item Uses \code{get_metadata()} function to retrieve district-region mappings
\item Uses \code{add_version()} to append version information to filenames
\item Uses \code{upload_parquet_to_cloud()} and \code{upload_cloud_file()} for cloud storage
}

\strong{Data Processing Notes}:
\itemize{
\item District names are case-corrected (specifically "Chake chake" â†’ "Chake Chake")
\item Regions are converted to lowercase in the output for consistency
\item Dates are formatted in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)
\item All outputs include "country" = "zanzibar" for multi-country compatibility
}
}
\examples{
\dontrun{
# Load configuration
pars <- read_config()

# Get monthly summaries data
monthly_data <- download_parquet_from_cloud(
  prefix = "wf_monthly_summaries",
  provider = pars$storage$google$key,
  options = pars$storage$google$options
)

# Create regional geospatial summaries
create_geos_v1(
  monthly_summaries_dat = monthly_data,
  pars = pars
)
}

}
\seealso{
\itemize{
\item \code{\link[=create_geos]{create_geos()}} for the spatial proximity-based version
\item \code{\link[=export_wf_data]{export_wf_data()}} which calls this function as part of the export workflow
\item \code{\link[=get_metadata]{get_metadata()}} for retrieving site and administrative information
}
}
\keyword{export}
\keyword{spatial}
