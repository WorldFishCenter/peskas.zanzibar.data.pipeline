% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validation.R
\name{sync_validation_submissions}
\alias{sync_validation_submissions}
\title{Synchronize Validation Statuses with KoboToolbox}
\usage{
sync_validation_submissions(log_threshold = logger::DEBUG)
}
\arguments{
\item{log_threshold}{The logging level threshold for the logger package (e.g., DEBUG, INFO).
Default is logger::DEBUG.}
}
\value{
None. The function performs status updates and database operations as side effects.
}
\description{
Synchronizes validation statuses between the local system and KoboToolbox by processing
validation flags and updating submission statuses accordingly. This function handles
both flagged (not approved) and clean (approved) submissions in parallel.
}
\details{
The function follows these steps:
\enumerate{
\item Downloads the current validation flags from cloud storage
\item Sets up parallel processing using the future package
\item Processes submissions with alert flags (marking them as not approved in KoboToolbox)
\item Processes submissions without alert flags (marking them as approved in KoboToolbox)
\item Pushes all validation flags to MongoDB for record-keeping
}

Progress reporting is enabled to track the status of submissions being processed.
}
\note{
This function requires proper configuration in the config file, including:
\itemize{
\item MongoDB connection parameters
\item KoboToolbox asset ID and token
\item Google cloud storage parameters
}
}
\section{Parallel Processing}{

The function uses the future and furrr packages for parallel processing, with the number
of workers set to system cores minus 2 to prevent resource exhaustion.
}

\examples{
\dontrun{
# Run with default DEBUG logging
sync_validation_submissions()

# Run with INFO level logging
sync_validation_submissions(log_threshold = logger::INFO)
}

}
\keyword{validation}
\keyword{workflow}
